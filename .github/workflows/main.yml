name: Reproduce Dr. Memory Flaky Race Condition Issue #1557

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-multilib g++-multilib 
        # libunwind8 libc6-dev g++ gcc libunwind-dev
        # wget https://github.com/DynamoRIO/drmemory/releases/download/release_2.6.0/DrMemory-Linux-1.7.0-5.tar.gz
        # tar -xzf DrMemory-Linux-2.6.0.tar.gz
        # export PATH=$PATH:$PWD/DrMemory-Linux-2.6.0/bin

    - name: Compile drmemory-false-positive.c
      run: |
        gcc -g drmemory-false-positive.c -m32 -pthread


    # - name: Run Dr. Memory Multiple Times
    #   run: |
    #     sudo sysctl -w kernel.randomize_va_space=0
    #     export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/libunwind.so.8:$LD_LIBRARY_PATH
    #     for i in {1..10}; do
    #       echo "===== Run $i ====="
    #       ./DrMemory-Linux-2.6.0/bin/drmemory -- ./drmemory-false-positive | grep -A 1 Error
    #     done
    - name: Install Dr. Memory
      if: runner.os == 'Linux'
      run: | 
        sudo apt-get update
        sudo apt-get install -y libunwind8
        wget -P /tmp/ https://github.com/DynamoRIO/drmemory/releases/download/release_1.7.0/DrMemory-Linux-1.7.0-5.tar.gz && tar -xzf /tmp/DrMemory-Linux-1.7.0-5.tar.gz -C /tmp/ && echo "/tmp/DrMemory-Linux-1.7.0-5/bin" >> $GITHUB_PATH

           
    - name: Disable Address Space Randomization
      if: runner.os == 'Linux'
      run: sudo sysctl -w kernel.randomize_va_space=0
      
    - name: Disable swapping 
      if: runner.os == 'Linux' 
      run: sudo swapoff -a
        
    - name: Run Dr. Memory
      run: |
        #!/bin/bash
        mkdir -p drmem_logs
        set +e 
        echo "=========[Dr Memory Service Started!]========="
        ls -l
        DIRECTORY=.
        is_executable() {
          local file="$1"
          if file "$file" | grep -q 'ELF 64-bit'; then
            return 0
          else
            return 1
          fi
        }
        run_with_drmemory() {
          local executable="$1"
          local log_dir="./logs"
          timeout 30s drmemory -logdir "./drmem_logs" -- "$executable"
          local exit_status=$?
        }
        for((i=0;i<100;i++)); do 
          echo ====== $i ====== 
          drmemory -- ./a.out; done
        find "$DIRECTORY" -type f -executable | while read -r file; do
          if is_executable "$file"; then
            echo "executing $file"
            run_with_drmemory "$file"
            echo ""
            echo ""
            echo ""
          fi
        done
        echo "=========[Dr. Memory service finished]========="
    - name: Upload Dr. Memory reports
      uses: actions/upload-artifact@v4
      with:
        name: drmemory-report-${{ github.event.repository.name }}-on-${{ matrix.os }}-from_branch_${{ github.ref_name }}
        path: './drmem_logs/*'
